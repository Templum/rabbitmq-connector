# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# rabbitmq-connector was never tested with more than 1 instance
replicaCount: 1

image:
  repository: templum/rabbitmq-connector
  tag: v0.1.4

  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  pullSecrets: {}

nameOverride: ""
fullnameOverride: ""

openfaas:
  # in a default installation, it would be gateway.openfaas
  host: ""
  port: 8080
  secretMountPath: /etc/openfaas
  # openfaas login data
  username: ""
  password: ""

rmq:
  # comma-separated list of topics, eg. billing,account,support
  topics: ""
  # rabbitmq hostname
  host: ""
  port: 5672
  # rabbitmq credentials
  user: ""
  # either you give the password or the existing password secret
  password: ""
  # if it exists, the password secret needs to have a key "rabbitmq-password" 
  # (same requirement as for rabbitmq helm chart)
  existingPasswordSecret: ""

service:
  requestTimeout: 30s
  topiceMapRefreshTime: 30s

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
